/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Apteka;

import Apteka.exceptions.IllegalOrphanException;
import Apteka.exceptions.NonexistentEntityException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.RollbackException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sebcio
 */
public class AptekaMain extends javax.swing.JFrame {

    /**
     * Creates new form AptekaMain
     */
    public AptekaMain() {
        initComponents();
        bindKlientTable();
        bindReceptaTable();
        bindMagazynTable();
        bindDostawaTable();
        bindBoxKlient();
        bindDostawaMagazynTable();
        bindDostawaHurtowniaBox();
        bindDostawaLekBox();
        bindReceptaMagazynTable();
        bindReceptaLekiBox();
        bindReceptaKlientBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        AptekaBazaPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("AptekaBazaPU").createEntityManager();
        klientQuery = java.beans.Beans.isDesignTime() ? null : AptekaBazaPUEntityManager.createQuery("SELECT k FROM Klient k");
        klientList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : klientQuery.getResultList();
        receptaQuery = java.beans.Beans.isDesignTime() ? null : AptekaBazaPUEntityManager.createQuery("SELECT r FROM Recepta r");
        receptaList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : receptaQuery.getResultList();
        magazynLekiQuery = java.beans.Beans.isDesignTime() ? null : AptekaBazaPUEntityManager.createQuery("SELECT m FROM MagazynLeki m");
        magazynLekiList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : magazynLekiQuery.getResultList();
        dostawaQuery = java.beans.Beans.isDesignTime() ? null : AptekaBazaPUEntityManager.createQuery("SELECT d FROM Dostawa d");
        dostawaList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : dostawaQuery.getResultList();
        klientQuery1 = java.beans.Beans.isDesignTime() ? null : AptekaBazaPUEntityManager.createQuery("SELECT k FROM Klient k");
        klientList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : klientQuery1.getResultList();
        dostawaQuery1 = java.beans.Beans.isDesignTime() ? null : AptekaBazaPUEntityManager.createQuery("SELECT d FROM Dostawa d");
        dostawaList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : dostawaQuery1.getResultList();
        dostawaQuery2 = java.beans.Beans.isDesignTime() ? null : AptekaBazaPUEntityManager.createQuery("SELECT d FROM Dostawa d");
        dostawaList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : dostawaQuery2.getResultList();
        dostawaQuery3 = java.beans.Beans.isDesignTime() ? null : AptekaBazaPUEntityManager.createQuery("SELECT d FROM Dostawa d");
        dostawaList3 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : dostawaQuery3.getResultList();
        magazynLekiQuery1 = java.beans.Beans.isDesignTime() ? null : AptekaBazaPUEntityManager.createQuery("SELECT m FROM MagazynLeki m");
        magazynLekiList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : magazynLekiQuery1.getResultList();
        magazynLekiQuery2 = java.beans.Beans.isDesignTime() ? null : AptekaBazaPUEntityManager.createQuery("SELECT m FROM MagazynLeki m");
        magazynLekiList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : magazynLekiQuery2.getResultList();
        dostawaMagazynQuery = java.beans.Beans.isDesignTime() ? null : AptekaBazaPUEntityManager.createQuery("SELECT d FROM DostawaMagazyn d");
        dostawaMagazynList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : dostawaMagazynQuery.getResultList();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        imieKlient = new javax.swing.JTextField();
        nazwiskoKlient = new javax.swing.JTextField();
        peselKlient = new javax.swing.JTextField();
        telefonKlient = new javax.swing.JTextField();
        AddKlient = new javax.swing.JButton();
        UpdateKlient = new javax.swing.JButton();
        DeleteKlient = new javax.swing.JButton();
        ClearKlient = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabKlient = new javax.swing.JTable();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        TabRecepta = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        lekiRecepta = new javax.swing.JTextField();
        klientRecepta = new javax.swing.JComboBox<>();
        AddRecepta = new javax.swing.JButton();
        UpdateRecepta = new javax.swing.JButton();
        DeleteRecepta = new javax.swing.JButton();
        ClearRecepta = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        AddMagazyn = new javax.swing.JButton();
        UpdateMagazyn = new javax.swing.JButton();
        DeleteMagazyn = new javax.swing.JButton();
        ClearMagazyn = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        nazwaMagazyn = new javax.swing.JTextField();
        iloscMagazyn = new javax.swing.JTextField();
        cenaMagazyn = new javax.swing.JTextField();
        dataMagazyn = new com.toedter.calendar.JDateChooser();
        jScrollPane9 = new javax.swing.JScrollPane();
        TabMagazyn = new javax.swing.JTable();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        nazwahurtowniDostawa = new javax.swing.JTextField();
        iloscDostawa = new javax.swing.JTextField();
        AddDostawa = new javax.swing.JButton();
        UpdateDostawa = new javax.swing.JButton();
        DeleteDostawa = new javax.swing.JButton();
        ClearDostawa = new javax.swing.JButton();
        dataDostawa = new com.toedter.calendar.JDateChooser();
        jScrollPane10 = new javax.swing.JScrollPane();
        TabDostawa = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabDostawaMagazyn = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        HurtowniaDostawaLek = new javax.swing.JComboBox<>();
        LekDostawaLek = new javax.swing.JComboBox<>();
        AddDostawaLek = new javax.swing.JButton();
        UpdateDostawaLek = new javax.swing.JButton();
        DeleteDostawaLek = new javax.swing.JButton();
        ClearDostawaLek = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ReceptaLekiKlient = new javax.swing.JComboBox<>();
        ReceptaLekiLek = new javax.swing.JComboBox<>();
        AddReceptaLeki = new javax.swing.JButton();
        UpdateReceptaLeki = new javax.swing.JButton();
        DeleteReceptaLeki = new javax.swing.JButton();
        ClearReceptaLeki = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        TabReceptaLeki = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), "Klient", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
        jPanel14.setToolTipText("");
        jPanel14.setName(""); // NOI18N

        jLabel22.setText("Imię");

        jLabel23.setText("Nazwisko");

        jLabel24.setText("PESEL");

        jLabel25.setText("Telefon");

        AddKlient.setText("Wprowadź");
        AddKlient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddKlientActionPerformed(evt);
            }
        });

        UpdateKlient.setText("Aktualizuj");
        UpdateKlient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateKlientActionPerformed(evt);
            }
        });

        DeleteKlient.setText("Usuń");
        DeleteKlient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteKlientActionPerformed(evt);
            }
        });

        ClearKlient.setText("Wyczyść");
        ClearKlient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearKlientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(AddKlient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UpdateKlient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteKlient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ClearKlient))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(peselKlient, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(telefonKlient, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nazwiskoKlient, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(imieKlient, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel14Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {imieKlient, nazwiskoKlient, peselKlient, telefonKlient});

        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(imieKlient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(nazwiskoKlient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(peselKlient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(telefonKlient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddKlient)
                    .addComponent(UpdateKlient)
                    .addComponent(DeleteKlient)
                    .addComponent(ClearKlient))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TabKlient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TabKlient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabKlientMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabKlient);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Klient", jPanel13);

        TabRecepta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TabRecepta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabReceptaMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(TabRecepta);

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), "Recepta", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
        jPanel16.setToolTipText("");
        jPanel16.setName(""); // NOI18N
        jPanel16.setPreferredSize(new java.awt.Dimension(421, 218));

        jLabel26.setText("Klient");

        jLabel27.setText("Leki");

        lekiRecepta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lekiReceptaActionPerformed(evt);
            }
        });

        klientRecepta.setPreferredSize(new java.awt.Dimension(6, 20));
        klientRecepta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                klientReceptaActionPerformed(evt);
            }
        });

        AddRecepta.setText("Wprowadź");
        AddRecepta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddReceptaActionPerformed(evt);
            }
        });

        UpdateRecepta.setText("Aktualizuj");
        UpdateRecepta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateReceptaActionPerformed(evt);
            }
        });

        DeleteRecepta.setText("Usuń");
        DeleteRecepta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteReceptaActionPerformed(evt);
            }
        });

        ClearRecepta.setText("Wyczyść");
        ClearRecepta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearReceptaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(jLabel27))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lekiRecepta, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                            .addComponent(klientRecepta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(AddRecepta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UpdateRecepta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteRecepta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ClearRecepta)))
                .addGap(0, 29, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(klientRecepta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lekiRecepta, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddRecepta)
                    .addComponent(UpdateRecepta)
                    .addComponent(DeleteRecepta)
                    .addComponent(ClearRecepta))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Recepta", jPanel15);

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), "Magazyn", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
        jPanel18.setToolTipText("");
        jPanel18.setName(""); // NOI18N
        jPanel18.setPreferredSize(new java.awt.Dimension(421, 218));

        jLabel28.setText("Nazwa");

        jLabel29.setText("Ilość");

        AddMagazyn.setText("Wprowadź");
        AddMagazyn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddMagazynActionPerformed(evt);
            }
        });

        UpdateMagazyn.setText("Aktualizuj");
        UpdateMagazyn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateMagazynActionPerformed(evt);
            }
        });

        DeleteMagazyn.setText("Usuń");
        DeleteMagazyn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteMagazynActionPerformed(evt);
            }
        });

        ClearMagazyn.setText("Wyczyść");
        ClearMagazyn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearMagazynActionPerformed(evt);
            }
        });

        jLabel30.setText("Cena");

        jLabel31.setText("Data ważności");

        nazwaMagazyn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nazwaMagazynActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AddMagazyn)
                            .addComponent(jLabel31))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addComponent(UpdateMagazyn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DeleteMagazyn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ClearMagazyn))
                            .addComponent(dataMagazyn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(jLabel29)
                            .addComponent(jLabel28))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nazwaMagazyn, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iloscMagazyn, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cenaMagazyn, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29))))
        );

        jPanel18Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cenaMagazyn, iloscMagazyn, nazwaMagazyn});

        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(nazwaMagazyn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(iloscMagazyn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(cenaMagazyn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31)
                    .addComponent(dataMagazyn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddMagazyn)
                    .addComponent(UpdateMagazyn)
                    .addComponent(DeleteMagazyn)
                    .addComponent(ClearMagazyn))
                .addContainerGap())
        );

        TabMagazyn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, magazynLekiList, TabMagazyn);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nazwa}"));
        columnBinding.setColumnName("Nazwa");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${ilosc}"));
        columnBinding.setColumnName("Ilość");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cena}"));
        columnBinding.setColumnName("Cena");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${datawaznosci}"));
        columnBinding.setColumnName("Data ważności");
        columnBinding.setColumnClass(java.util.Date.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        TabMagazyn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabMagazynMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(TabMagazyn);

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Magazyn", jPanel17);

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), "Dostawa", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
        jPanel20.setToolTipText("");
        jPanel20.setName(""); // NOI18N
        jPanel20.setPreferredSize(new java.awt.Dimension(421, 218));

        jLabel32.setText("Nazwa hurtowni");

        jLabel33.setText("Ilość");

        jLabel34.setText("Data dostarczenia");

        nazwahurtowniDostawa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nazwahurtowniDostawaActionPerformed(evt);
            }
        });

        AddDostawa.setText("Wprowadź");
        AddDostawa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDostawaActionPerformed(evt);
            }
        });

        UpdateDostawa.setText("Aktualizuj");
        UpdateDostawa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateDostawaActionPerformed(evt);
            }
        });

        DeleteDostawa.setText("Usuń");
        DeleteDostawa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteDostawaActionPerformed(evt);
            }
        });

        ClearDostawa.setText("Wyczyść");
        ClearDostawa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearDostawaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(AddDostawa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UpdateDostawa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteDostawa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ClearDostawa)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dataDostawa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addComponent(jLabel32))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(iloscDostawa, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                            .addComponent(nazwahurtowniDostawa))
                        .addGap(59, 59, 59))))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(nazwahurtowniDostawa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(iloscDostawa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel34)
                    .addComponent(dataDostawa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddDostawa)
                    .addComponent(UpdateDostawa)
                    .addComponent(DeleteDostawa)
                    .addComponent(ClearDostawa))
                .addContainerGap())
        );

        TabDostawa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, dostawaList, TabDostawa);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nazwahurtowni}"));
        columnBinding.setColumnName("Nazwa hurtowni");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${ilosc}"));
        columnBinding.setColumnName("Ilość");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${datadostarczenia}"));
        columnBinding.setColumnName("Data dostarczenia");
        columnBinding.setColumnClass(java.util.Date.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        TabDostawa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabDostawaMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(TabDostawa);

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Dostawa", jPanel19);

        jScrollPane2.setViewportView(TabDostawaMagazyn);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), "Dostawa - Lek", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        jLabel1.setText("Nazwa hurtowni");

        jLabel2.setText("Lek");

        AddDostawaLek.setText("Wprowadź");
        AddDostawaLek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDostawaLekActionPerformed(evt);
            }
        });

        UpdateDostawaLek.setText("Aktualizuj");

        DeleteDostawaLek.setText("Usuń");

        ClearDostawaLek.setText("Wyczyść");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(AddDostawaLek)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UpdateDostawaLek)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteDostawaLek)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ClearDostawaLek))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(HurtowniaDostawaLek, 0, 260, Short.MAX_VALUE)
                            .addComponent(LekDostawaLek, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(HurtowniaDostawaLek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(LekDostawaLek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddDostawaLek)
                    .addComponent(UpdateDostawaLek)
                    .addComponent(DeleteDostawaLek)
                    .addComponent(ClearDostawaLek))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Dostawa leków", jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)), "Recepta - Leki", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        jLabel3.setText("Klient");

        jLabel4.setText("Lek");

        ReceptaLekiKlient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReceptaLekiKlientActionPerformed(evt);
            }
        });

        AddReceptaLeki.setText("Wprowadź");
        AddReceptaLeki.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddReceptaLekiActionPerformed(evt);
            }
        });

        UpdateReceptaLeki.setText("Aktualizuj");

        DeleteReceptaLeki.setText("Usuń");

        ClearReceptaLeki.setText("Wyczyść");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(AddReceptaLeki)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UpdateReceptaLeki)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteReceptaLeki)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ClearReceptaLeki)
                        .addContainerGap(71, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ReceptaLekiKlient, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ReceptaLekiLek, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ReceptaLekiKlient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ReceptaLekiLek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddReceptaLeki)
                    .addComponent(UpdateReceptaLeki)
                    .addComponent(DeleteReceptaLeki)
                    .addComponent(ClearReceptaLeki))
                .addContainerGap())
        );

        jScrollPane3.setViewportView(TabReceptaLeki);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Leki w recepcie", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1042, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lekiReceptaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lekiReceptaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lekiReceptaActionPerformed

    private void klientReceptaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_klientReceptaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_klientReceptaActionPerformed

    private void nazwaMagazynActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nazwaMagazynActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nazwaMagazynActionPerformed

    private void nazwahurtowniDostawaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nazwahurtowniDostawaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nazwahurtowniDostawaActionPerformed

    private void AddKlientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddKlientActionPerformed
        // TODO add your handling code here:
        try {
        Klient klient = new Klient();
        klient.setImie(imieKlient.getText());
        klient.setNazwisko(nazwiskoKlient.getText());
        klient.setPesel(peselKlient.getText());
        klient.setTelefon(telefonKlient.getText());
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        KlientJpaController controller = new KlientJpaController(emf);
        controller.create(klient);
        clearKlientTextFields();
        bindKlientTable();
        bindBoxKlient();
        } catch (RollbackException e) {
            JOptionPane.showMessageDialog(null, "Istnieje klient o takim PESELu!");
        } 
    }//GEN-LAST:event_AddKlientActionPerformed

    private void AddReceptaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddReceptaActionPerformed
        // TODO add your handling code here:
        Recepta recepta = new Recepta();
        Klient klient = (Klient) klientRecepta.getSelectedItem();
        recepta.setKlientID(klient);
        recepta.setLeki(lekiRecepta.getText());
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        ReceptaJpaController controller = new ReceptaJpaController(emf);
        controller.create(recepta);
        clearReceptaTextFields();
        bindReceptaTable();
    }//GEN-LAST:event_AddReceptaActionPerformed

    private void AddMagazynActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddMagazynActionPerformed
        // TODO add your handling code here:
        MagazynLeki magazynLeki = new MagazynLeki();
        magazynLeki.setNazwa(nazwaMagazyn.getText());
        magazynLeki.setCena(Integer.parseInt(cenaMagazyn.getText()));
        magazynLeki.setIlosc(Integer.parseInt(iloscMagazyn.getText()));
        magazynLeki.setDatawaznosci(dataMagazyn.getDate());
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        MagazynLekiJpaController controller = new MagazynLekiJpaController(emf);
        controller.create(magazynLeki);
        clearMagazynTextFields();
        bindMagazynTable();
    }//GEN-LAST:event_AddMagazynActionPerformed

    private void AddDostawaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddDostawaActionPerformed
        // TODO add your handling code here:
        Dostawa dostawa = new Dostawa();
        dostawa.setDatadostarczenia(dataDostawa.getDate());
        dostawa.setNazwahurtowni(nazwahurtowniDostawa.getText());
        dostawa.setIlosc(Integer.parseInt(iloscDostawa.getText()));
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        DostawaJpaController controller = new DostawaJpaController(emf);
        controller.create(dostawa);
        clearDostawaTextFields();
        bindDostawaTable();
    }//GEN-LAST:event_AddDostawaActionPerformed

    private void AddDostawaLekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddDostawaLekActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddDostawaLekActionPerformed

    private void ClearKlientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearKlientActionPerformed
        // TODO add your handling code here:
        clearKlientTextFields();
    }//GEN-LAST:event_ClearKlientActionPerformed

    private void ClearReceptaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearReceptaActionPerformed
        // TODO add your handling code here:
        clearReceptaTextFields();
    }//GEN-LAST:event_ClearReceptaActionPerformed

    private void DeleteReceptaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteReceptaActionPerformed
        // TODO add your handling code here:
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        ReceptaJpaController controller = new ReceptaJpaController(emf);
        try {
            controller.destroy(selectedReceptaID);
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(AptekaMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalOrphanException ex) {
            Logger.getLogger(AptekaMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        clearReceptaTextFields();
        bindReceptaTable();
    }//GEN-LAST:event_DeleteReceptaActionPerformed

    private void TabKlientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabKlientMouseClicked
        // TODO add your handling code here:
        int rowNum = TabKlient.getSelectedRow();
        selectedKlientID = Integer.parseInt(TabKlient.getValueAt(rowNum, 0).toString());
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        KlientJpaController controller = new KlientJpaController(emf);
        Klient klient = controller.findKlient(selectedKlientID);
        
        imieKlient.setText(klient.getImie());
        nazwiskoKlient.setText(klient.getNazwisko());
        peselKlient.setText(klient.getPesel());
        telefonKlient.setText(klient.getTelefon());
    }//GEN-LAST:event_TabKlientMouseClicked

    private void TabReceptaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabReceptaMouseClicked
        // TODO add your handling code here:
        int rowNum = TabRecepta.getSelectedRow();
        selectedReceptaID = Integer.parseInt(TabRecepta.getValueAt(rowNum, 0).toString());
        
        lekiRecepta.setText(TabRecepta.getValueAt(rowNum, 1).toString());
        int idklienta = Integer.parseInt(TabRecepta.getValueAt(rowNum, 3).toString());

        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        KlientJpaController controller = new KlientJpaController(emf);
        Klient klient = controller.findKlient(idklienta);
        ReceptaJpaController receptaController = new ReceptaJpaController(emf);
        Recepta recepta = receptaController.findRecepta(selectedReceptaID);
        klientRecepta.setSelectedItem(klient);
    }//GEN-LAST:event_TabReceptaMouseClicked

    private void UpdateReceptaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateReceptaActionPerformed
        // TODO add your handling code here:
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        ReceptaJpaController controller = new ReceptaJpaController(emf);
        
        Recepta recepta = controller.findRecepta(selectedReceptaID);
        recepta.setKlientID((Klient)klientRecepta.getSelectedItem());
        recepta.setLeki(lekiRecepta.getText());
        try {
            controller.edit(recepta);
        } catch (Exception ex) {
            Logger.getLogger(AptekaMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        clearReceptaTextFields();
        bindReceptaTable();
        selectedReceptaID = -1;
    }//GEN-LAST:event_UpdateReceptaActionPerformed

    private void UpdateKlientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateKlientActionPerformed
        // TODO add your handling code here:
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        KlientJpaController controller = new KlientJpaController(emf);    
        
        Klient klient = controller.findKlient(selectedKlientID);
        klient.setImie(imieKlient.getText());
        klient.setNazwisko(nazwiskoKlient.getText());
        klient.setPesel(peselKlient.getText());
        klient.setTelefon(telefonKlient.getText());
        try {
            controller.edit(klient);
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(AptekaMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(AptekaMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        selectedKlientID = -1;
        clearKlientTextFields();
        bindKlientTable();
        bindBoxKlient();
    }//GEN-LAST:event_UpdateKlientActionPerformed

    private void DeleteKlientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteKlientActionPerformed
        // TODO add your handling code here:
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        KlientJpaController controller = new KlientJpaController(emf);
        ReceptaJpaController receptaController = new ReceptaJpaController(emf);
        Klient klient = controller.findKlient(selectedKlientID);
        List<Recepta> receptaList = receptaController.getReceptaByKlient(klient);
        int numberOfRecepts = receptaList.size();
        if(numberOfRecepts <= 0){
            try {
                controller.destroy(selectedKlientID);
            } catch (IllegalOrphanException ex) {
                Logger.getLogger(AptekaMain.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NonexistentEntityException ex) {
                Logger.getLogger(AptekaMain.class.getName()).log(Level.SEVERE, null, ex);
            }
            selectedKlientID = -1;
            clearKlientTextFields();
            bindKlientTable();
            bindBoxKlient();
        } else {
            JOptionPane.showMessageDialog(null, "Nie możesz usunąć klienta, który ma recepte");
        }
    }//GEN-LAST:event_DeleteKlientActionPerformed

    private void UpdateMagazynActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateMagazynActionPerformed
        // TODO add your handling code here:
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        MagazynLekiJpaController controller = new MagazynLekiJpaController(emf);    
        
        MagazynLeki magazynLeki = controller.findMagazynLeki(selectedMagazynID);
        magazynLeki.setNazwa(nazwaMagazyn.getText());
        magazynLeki.setCena(Integer.parseInt(cenaMagazyn.getText()));
        magazynLeki.setIlosc(Integer.parseInt(iloscMagazyn.getText()));
        magazynLeki.setDatawaznosci(dataMagazyn.getDate());
        try {
            controller.edit(magazynLeki);
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(AptekaMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(AptekaMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        selectedMagazynID = -1;
        clearMagazynTextFields();
        bindMagazynTable();
    }//GEN-LAST:event_UpdateMagazynActionPerformed

    private void TabMagazynMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabMagazynMouseClicked
        // TODO add your handling code here:
        int rowNum = TabMagazyn.getSelectedRow();
        selectedMagazynID = Integer.parseInt(TabMagazyn.getValueAt(rowNum, 0).toString());
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        MagazynLekiJpaController controller = new MagazynLekiJpaController(emf);
        MagazynLeki magazynLeki = controller.findMagazynLeki(selectedMagazynID);
        
        nazwaMagazyn.setText(magazynLeki.getNazwa());
        cenaMagazyn.setText(String.valueOf(magazynLeki.getCena()));
        iloscMagazyn.setText(String.valueOf(magazynLeki.getIlosc()));
        dataMagazyn.setDate(magazynLeki.getDatawaznosci());
    }//GEN-LAST:event_TabMagazynMouseClicked

    private void TabDostawaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabDostawaMouseClicked
        // TODO add your handling code here:
        int rowNum = TabDostawa.getSelectedRow();
        selectedDostawaID = Integer.parseInt(TabDostawa.getValueAt(rowNum, 0).toString());
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        DostawaJpaController controller = new DostawaJpaController(emf);
        Dostawa dostawa = controller.findDostawa(selectedDostawaID);
        
        nazwahurtowniDostawa.setText(dostawa.getNazwahurtowni());
        iloscDostawa.setText(String.valueOf(dostawa.getIlosc()));
        dataDostawa.setDate(dostawa.getDatadostarczenia());
    }//GEN-LAST:event_TabDostawaMouseClicked

    private void UpdateDostawaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateDostawaActionPerformed
        // TODO add your handling code here:
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        DostawaJpaController controller = new DostawaJpaController(emf);    
        
        Dostawa dostawa = controller.findDostawa(selectedDostawaID);
        dostawa.setDatadostarczenia(dataDostawa.getDate());
        dostawa.setNazwahurtowni(nazwahurtowniDostawa.getText());
        dostawa.setIlosc(Integer.parseInt(iloscDostawa.getText()));
        try {
            controller.edit(dostawa);
        } catch (Exception ex) {
            Logger.getLogger(AptekaMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        selectedDostawaID = -1;
        clearDostawaTextFields();
        bindDostawaTable();
    }//GEN-LAST:event_UpdateDostawaActionPerformed

    private void ClearDostawaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearDostawaActionPerformed
        // TODO add your handling code here:
        clearDostawaTextFields();
    }//GEN-LAST:event_ClearDostawaActionPerformed

    private void DeleteDostawaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteDostawaActionPerformed
        // TODO add your handling code here:
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        DostawaJpaController controller = new DostawaJpaController(emf);
        Dostawa dostawa = controller.findDostawa(selectedDostawaID);
        try {
            controller.destroy(selectedDostawaID);
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(AptekaMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalOrphanException ex) {
            Logger.getLogger(AptekaMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        clearDostawaTextFields();
        bindDostawaTable();
    }//GEN-LAST:event_DeleteDostawaActionPerformed

    private void DeleteMagazynActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteMagazynActionPerformed
        // TODO add your handling code here:
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        MagazynLekiJpaController controller = new MagazynLekiJpaController(emf);
        MagazynLeki magazynLeki = controller.findMagazynLeki(selectedMagazynID);
        try {
            controller.destroy(selectedMagazynID);
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(AptekaMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalOrphanException ex) {
            Logger.getLogger(AptekaMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        clearMagazynTextFields();
        bindMagazynTable();
    }//GEN-LAST:event_DeleteMagazynActionPerformed

    private void ClearMagazynActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearMagazynActionPerformed
        // TODO add your handling code here:
        clearMagazynTextFields();
    }//GEN-LAST:event_ClearMagazynActionPerformed

    private void AddReceptaLekiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddReceptaLekiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddReceptaLekiActionPerformed

    private void ReceptaLekiKlientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReceptaLekiKlientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ReceptaLekiKlientActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AptekaMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AptekaMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AptekaMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AptekaMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AptekaMain().setVisible(true);
            }
        });
    }
    
    private void bindKlientTable(){
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        KlientJpaController controller = new KlientJpaController(emf);
        List<Klient> listaKlients = controller.findKlientEntities();
        
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new String[]{"ID", "Imię", "Nazwisko", "PESEL", "Telefon"});
        for(Klient klient: listaKlients){
            model.addRow(new String[]{klient.getIDKlienta().toString(), klient.getImie(), klient.getNazwisko(), klient.getPesel(), klient.getTelefon()});
        }
        TabKlient.setModel(model);
        TabKlient.getColumnModel().getColumn(0).setMinWidth(0);
        TabKlient.getColumnModel().getColumn(0).setMaxWidth(0);
        TabKlient.getColumnModel().getColumn(0).setPreferredWidth(0);
    }
    
    private void bindBoxKlient(){
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        KlientJpaController controller = new KlientJpaController(emf);
        List<Klient> listaKlients = controller.findKlientEntities();
        
        Object[] arrayKlients = listaKlients.toArray();
        DefaultComboBoxModel model = new DefaultComboBoxModel(arrayKlients);
        klientRecepta.setModel(model);
    }
    
    private void bindReceptaTable(){
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        ReceptaJpaController controller = new ReceptaJpaController(emf);
        List<Recepta> listaReceptas = controller.findReceptaEntities();
        
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new String[]{"ID", "Leki", "Klient", "Klient ID"});
        String klientName = "";
        for(Recepta recepta: listaReceptas){
            klientName = recepta.getKlientID().getImie() + " " + recepta.getKlientID().getNazwisko();
            model.addRow(new String[]{recepta.getIDrecepty().toString(), recepta.getLeki(), klientName, recepta.getKlientID().getIDKlienta().toString()});
        }
        TabRecepta.setModel(model);
        TabRecepta.getColumnModel().getColumn(0).setMinWidth(0);
        TabRecepta.getColumnModel().getColumn(0).setMaxWidth(0);
        TabRecepta.getColumnModel().getColumn(0).setPreferredWidth(0);
        TabRecepta.getColumnModel().getColumn(3).setMinWidth(3);
        TabRecepta.getColumnModel().getColumn(3).setMaxWidth(3);
        TabRecepta.getColumnModel().getColumn(3).setPreferredWidth(3);
    }
    
    private void bindMagazynTable(){
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        MagazynLekiJpaController controller = new MagazynLekiJpaController(emf);
        List<MagazynLeki> listaMagazynLekis = controller.findMagazynLekiEntities();
        
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new String[]{"ID leku", "Nazwa", "Ilość", "Cena", "Data ważności"});
        for(MagazynLeki magazynLeki: listaMagazynLekis){
            model.addRow(new String[]{magazynLeki.getIDleku().toString(), magazynLeki.getNazwa(), Integer.toString(magazynLeki.getIlosc()), Long.toString(magazynLeki.getCena()), magazynLeki.getDatawaznosci().toString()});
        }
        TabMagazyn.setModel(model);
        TabMagazyn.getColumnModel().getColumn(0).setMinWidth(0);
        TabMagazyn.getColumnModel().getColumn(0).setMaxWidth(0);
        TabMagazyn.getColumnModel().getColumn(0).setPreferredWidth(0);
    }
    
    private void bindDostawaTable(){
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        DostawaJpaController controller = new DostawaJpaController(emf);
        List<Dostawa> listdosDostawas = controller.findDostawaEntities();
        
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new String[]{"ID dostawy", "Nazwa hurtowni", "Data dostarczenia", "Ilość"});
        for(Dostawa dostawa: listdosDostawas){
            model.addRow(new String[]{dostawa.getIDdostawy().toString(), dostawa.getNazwahurtowni(), dostawa.getDatadostarczeniaAsString(), Integer.toString(dostawa.getIlosc())});
        }
        TabDostawa.setModel(model);
        TabDostawa.getColumnModel().getColumn(0).setMinWidth(0);
        TabDostawa.getColumnModel().getColumn(0).setMaxWidth(0);
        TabDostawa.getColumnModel().getColumn(0).setPreferredWidth(0);
    }
    
    private void bindDostawaMagazynTable(){
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        DostawaMagazynJpaController controller = new DostawaMagazynJpaController(emf);
        List<DostawaMagazyn> listdostawaMagazyns = controller.findDostawaMagazynEntities();
        
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new String[]{"ID", "Hurtownia", "Leki w dostawie"});
        for(DostawaMagazyn dostawaMagazyn: listdostawaMagazyns){
            model.addRow(new String[]{dostawaMagazyn.getIDdostawamagazyn().toString(), dostawaMagazyn.getIDdostawy().toString(), dostawaMagazyn.getIDleku().toString()});
        }
        TabDostawaMagazyn.setModel(model);
        TabDostawaMagazyn.getColumnModel().getColumn(0).setMinWidth(0);
        TabDostawaMagazyn.getColumnModel().getColumn(0).setMaxWidth(0);
        TabDostawaMagazyn.getColumnModel().getColumn(0).setPreferredWidth(0);
    }
    
    private void bindDostawaHurtowniaBox(){
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        DostawaJpaController controller = new DostawaJpaController(emf);
        List<Dostawa> listaDostawas = controller.findDostawaEntities();
        
        Object[] arrayKlients = listaDostawas.toArray();
        DefaultComboBoxModel model = new DefaultComboBoxModel(arrayKlients);
        HurtowniaDostawaLek.setModel(model);
    }
    
    private void bindDostawaLekBox(){
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        MagazynLekiJpaController controller = new MagazynLekiJpaController(emf);
        List<MagazynLeki> listaMagazynLekis = controller.findMagazynLekiEntities();
        
        Object[] arrayKlients = listaMagazynLekis.toArray();
        DefaultComboBoxModel model = new DefaultComboBoxModel(arrayKlients);
        LekDostawaLek.setModel(model);
    }
    
    private void bindReceptaMagazynTable(){
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        ReceptaMagazynJpaController controller = new ReceptaMagazynJpaController(emf);
        List<ReceptaMagazyn> listaReceptaMagazyns = controller.findReceptaMagazynEntities();
        
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new String[]{"ID", "Recepta", "Leki"});
        for(ReceptaMagazyn receptaMagazyn: listaReceptaMagazyns){
            model.addRow(new String[]{receptaMagazyn.getIdreceptamagazyn().toString(), receptaMagazyn.getIDrecepty().toString(), receptaMagazyn.getIDleku().toString()});
        }
        TabReceptaLeki.setModel(model);
        TabReceptaLeki.getColumnModel().getColumn(0).setMinWidth(0);
        TabReceptaLeki.getColumnModel().getColumn(0).setMaxWidth(0);
        TabReceptaLeki.getColumnModel().getColumn(0).setPreferredWidth(0);
        
    }
    
    private void bindReceptaKlientBox(){
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        KlientJpaController controller = new KlientJpaController(emf);
        List<Klient> listaKlients = controller.findKlientEntities();
        
        Object[] arrayKlients = listaKlients.toArray();
        DefaultComboBoxModel model = new DefaultComboBoxModel(arrayKlients);
        ReceptaLekiKlient.setModel(model);
    }
    
    private void bindReceptaLekiBox(){
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("AptekaBazaPU");
        MagazynLekiJpaController controller = new MagazynLekiJpaController(emf);
        List<MagazynLeki> listaMagazynLekis = controller.findMagazynLekiEntities();
        
        Object[] arrayKlients = listaMagazynLekis.toArray();
        DefaultComboBoxModel model = new DefaultComboBoxModel(arrayKlients);
        ReceptaLekiLek.setModel(model);
    }
    
    private void clearKlientTextFields(){
        imieKlient.setText("");
        nazwiskoKlient.setText("");
        peselKlient.setText("");
        telefonKlient.setText("");
    }
    
    private void clearReceptaTextFields(){
        lekiRecepta.setText("");
    }
    
    private void clearMagazynTextFields(){
        nazwaMagazyn.setText("");
        cenaMagazyn.setText("");
        iloscMagazyn.setText("");
    }
    
    private void clearDostawaTextFields(){
        nazwahurtowniDostawa.setText("");
        iloscDostawa.setText("");
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddDostawa;
    private javax.swing.JButton AddDostawaLek;
    private javax.swing.JButton AddKlient;
    private javax.swing.JButton AddMagazyn;
    private javax.swing.JButton AddRecepta;
    private javax.swing.JButton AddReceptaLeki;
    private javax.persistence.EntityManager AptekaBazaPUEntityManager;
    private javax.swing.JButton ClearDostawa;
    private javax.swing.JButton ClearDostawaLek;
    private javax.swing.JButton ClearKlient;
    private javax.swing.JButton ClearMagazyn;
    private javax.swing.JButton ClearRecepta;
    private javax.swing.JButton ClearReceptaLeki;
    private javax.swing.JButton DeleteDostawa;
    private javax.swing.JButton DeleteDostawaLek;
    private javax.swing.JButton DeleteKlient;
    private javax.swing.JButton DeleteMagazyn;
    private javax.swing.JButton DeleteRecepta;
    private javax.swing.JButton DeleteReceptaLeki;
    private javax.swing.JComboBox<String> HurtowniaDostawaLek;
    private javax.swing.JComboBox<String> LekDostawaLek;
    private javax.swing.JComboBox<String> ReceptaLekiKlient;
    private javax.swing.JComboBox<String> ReceptaLekiLek;
    private javax.swing.JTable TabDostawa;
    private javax.swing.JTable TabDostawaMagazyn;
    private javax.swing.JTable TabKlient;
    private javax.swing.JTable TabMagazyn;
    private javax.swing.JTable TabRecepta;
    private javax.swing.JTable TabReceptaLeki;
    private javax.swing.JButton UpdateDostawa;
    private javax.swing.JButton UpdateDostawaLek;
    private javax.swing.JButton UpdateKlient;
    private javax.swing.JButton UpdateMagazyn;
    private javax.swing.JButton UpdateRecepta;
    private javax.swing.JButton UpdateReceptaLeki;
    private javax.swing.JTextField cenaMagazyn;
    private com.toedter.calendar.JDateChooser dataDostawa;
    private com.toedter.calendar.JDateChooser dataMagazyn;
    private java.util.List<Apteka.Dostawa> dostawaList;
    private java.util.List<Apteka.Dostawa> dostawaList1;
    private java.util.List<Apteka.Dostawa> dostawaList2;
    private java.util.List<Apteka.Dostawa> dostawaList3;
    private java.util.List<Apteka.DostawaMagazyn> dostawaMagazynList;
    private javax.persistence.Query dostawaMagazynQuery;
    private javax.persistence.Query dostawaQuery;
    private javax.persistence.Query dostawaQuery1;
    private javax.persistence.Query dostawaQuery2;
    private javax.persistence.Query dostawaQuery3;
    private javax.swing.JTextField iloscDostawa;
    private javax.swing.JTextField iloscMagazyn;
    private javax.swing.JTextField imieKlient;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane4;
    private java.util.List<Apteka.Klient> klientList;
    private java.util.List<Apteka.Klient> klientList1;
    private javax.persistence.Query klientQuery;
    private javax.persistence.Query klientQuery1;
    private javax.swing.JComboBox<String> klientRecepta;
    private javax.swing.JTextField lekiRecepta;
    private java.util.List<Apteka.MagazynLeki> magazynLekiList;
    private java.util.List<Apteka.MagazynLeki> magazynLekiList1;
    private java.util.List<Apteka.MagazynLeki> magazynLekiList2;
    private javax.persistence.Query magazynLekiQuery;
    private javax.persistence.Query magazynLekiQuery1;
    private javax.persistence.Query magazynLekiQuery2;
    private javax.swing.JTextField nazwaMagazyn;
    private javax.swing.JTextField nazwahurtowniDostawa;
    private javax.swing.JTextField nazwiskoKlient;
    private javax.swing.JTextField peselKlient;
    private java.util.List<Apteka.Recepta> receptaList;
    private javax.persistence.Query receptaQuery;
    private javax.swing.JTextField telefonKlient;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    int selectedKlientID;
    int selectedReceptaID;
    int selectedMagazynID;
    int selectedDostawaID;
    int selectedDostawaMagazynID;
    int selectedReceptaMagazynID;
}
